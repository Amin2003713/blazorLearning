@using System.Globalization
@using System.Reflection
<MudSwitch T="bool" Color=@Color.Primary Checked=@IsPersian CheckedChanged=CultureChanged Label=@(IsPersian?"Persian":"English") />

<MudDatePicker Culture="SelectedCulture" @bind-Date="@Date" @key=datePickerState />
@code {
    bool datePickerState = false;
    public DateTime? Date { get; set; }
    private bool IsPersian { get; set; }

    private void CultureChanged()
    {
        IsPersian = !IsPersian;
        datePickerState = !datePickerState;
    }
    public CultureInfo SelectedCulture
    {
        get
        {
            if (IsPersian)
            {
                var culture = new CultureInfo("fa-IR");

                DateTimeFormatInfo formatInfo = culture.DateTimeFormat;
                formatInfo.AbbreviatedDayNames = ["ی", "د", "س", "چ", "پ", "ج", "ش"];
                formatInfo.DayNames = ["یکشنبه", "دوشنبه", "سه شنبه", "چهار شنبه", "پنجشنبه", "جمعه", "شنبه"];
                var monthNames = new[] { "فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن", "اسفند", "", };
                formatInfo.AbbreviatedMonthNames = formatInfo.MonthNames = formatInfo.MonthGenitiveNames = formatInfo.AbbreviatedMonthGenitiveNames = monthNames;
                formatInfo.AMDesignator = "ق.ظ";
                formatInfo.PMDesignator = "ب.ظ";
                formatInfo.ShortDatePattern = "yyyy/MM/dd";
                formatInfo.LongDatePattern = "dddd, dd MMMM,yyyy";
                formatInfo.FirstDayOfWeek = DayOfWeek.Saturday;
                Calendar cal = new PersianCalendar();
                FieldInfo? fieldInfo = culture.GetType()?.GetField("calendar", BindingFlags.NonPublic | BindingFlags.Instance);
                fieldInfo?.SetValue(culture, cal);
                FieldInfo? info = formatInfo.GetType().GetField("calendar", BindingFlags.NonPublic | BindingFlags.Instance);
                info?.SetValue(formatInfo, cal);
                culture.NumberFormat.NumberDecimalSeparator = "/";
                culture.NumberFormat.DigitSubstitution = DigitShapes.NativeNational;
                culture.NumberFormat.NumberNegativePattern = 0;
                return culture;
            }
            return new CultureInfo("en-US");
        }
    }
}